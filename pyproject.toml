[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qpydao"
version = "0.1.0"
description = "qpydao is an esay database access object lib"
readme = "README.md"
requires-python = ">3.9"
dependencies = [
  "pydantic>=2.7.4",
  "alembic>=1.13.1",
  "sqlalchemy>=2.0.30",
  "sqlmodel>=0.0.19",
  "loguru>=0.7.2",
  "rich>=13.7.1",
  "qpyconf",
  "psycopg2-binary>=2.9.10",
  "psycopg>=3.2.0",
]


[project.scripts]
cleanup = "qpyci.commands:clean"
cov = "ci:coverage"
badge = "qpyci.commands:generate_badge"
check_format = "ci:check_format"

[dependency-groups]
lint = ["ruff>=0.8.3"]
dev = [
  "allure-pytest>=2.13.5",
  "pytest-cov>=6.0.0",
  "pytest>=8.3.4",
  "coverage-badge>=1.1.2",
  "qpyci",
]

[tool.uv]
default-groups = ["dev"]

[tool.uv.sources]
qpyci = { git = "https://github.com/fluent-qa/qpyci.git", rev = "main" }
qpyconf = { git = "https://github.com/fluent-qa/qpyconf.git", rev = "main" }

[tool.hatch.build.targets.wheel]
packages = ["src/qpydao"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel.force-include]
"ci.py" = "ci.py"


[tool.ruff]
line-length = 120
target-version = "py39"
include = ["qpydao/**/*.py", "tests/**/*.py", "docs/**/*.py"]

[tool.ruff.lint]
extend-select = ["Q", "RUF100", "C90", "UP", "I", "D"]
flake8-quotes = { inline-quotes = "single", multiline-quotes = "double" }
isort = { combine-as-imports = true, known-first-party = ["qpydao"] }
mccabe = { max-complexity = 15 }
ignore = [
  "D100", # ignore missing docstring in module
  "D102", # ignore missing docstring in public method
  "D104", # ignore missing docstring in public package
  "D105", # ignore missing docstring in magic methods
  "D107", # ignore missing docstring in __init__ methods
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# don't format python in docstrings, pytest-examples takes care of it
docstring-code-format = false
quote-style = "single"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D"]
"docs/**/*.py" = ["D"]
"src/qpydao/**/*.py" = ["D101", "D103"]


[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
  "--alluredir",
  "allure-results",
  "--clean-alluredir",
  "-l",
  "-s",
  "--durations",
  "0",
  "--cov",
  "qpydao",
]
log_cli = true
log_cli_level = "info"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_format = "%(asctime)s %(levelname)s %(message)s"
minversion = "6.0"
